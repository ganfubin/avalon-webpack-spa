{"version":3,"sources":["webpack:///./src/modules/photoes/photoes.js"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B,kBAAkB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B,kBAAkB;AAC9C;AACA;AACA,6BAA4B,kBAAkB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAkE;AAClE;AACA,mCAAkC;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,E,6CAAC,K","file":"12.chunk.f6321467.js","sourcesContent":["/**\n * Created by adminstrator on 2016/3/8.\n */\nfunction getIndex(index) {\n    if (index < 10) {\n        index = \"00\" + index;\n    } else if (index < 100) {\n        index = \"0\" + index;\n    }\n    return index;\n}\nvar $ = function(id) {\n    return document.getElementById(id);\n};\nrequire([ \"avalon\" ], function(avalon) {\n    var waterfall = {\n        load_items : null,\n        loaded_items:[],\n        col_num : 0,// 列数\n        waterfall_model : null,\n        col_width : 200,\n        loaded_num : 0,\n        init_num : 0,\n        loading : false,\n        start:0,\n        resizing:false,\n        find_shortest_col : function() {\n            // 找出最小高度的列\n            var a = avalon($('row0')).height(), min_i = 0;\n            for ( var i = 1; i < this.col_num; i++) {\n                var b = avalon($('row' + i)).height();\n                if (b < a) {\n                    min_i = i;\n                    a = b;\n                }\n            }\n            return min_i;\n        },\n        init : function(data) {\n            this.load_items = data;\n            this.loaded_items=this.loaded_items.concat(data);\n            this.waterfall_model = waterfall_model;\n            this.col_num = Math.floor(avalon(window).width()\n                / this.col_width);\n            this.init_num = this.col_num;\n            for ( var j = 0; j < this.col_num; j++) {\n                waterfall_model.img_list.push([]);\n            }\n            for ( var j = 0; j < this.col_num; j++) {\n                // 第一行图片\n                var a={};\n                a.src=getIndex(data[j].src);\n                a.height=data[j].height;\n                a.text=data[j].text;\n                waterfall_model.img_list[j].push(a);\n            }\n            this.start=this.col_num;\n        },\n        add_item : function(i) {\n            var a = this.find_shortest_col();\n            var b={};\n            var c=this.load_items[this.init_num+i];\n            if(c){\n                b.src=getIndex(c.src);\n                b.height=c.height;\n                b.text=c.text;\n                waterfall_model.img_list[a].push(b);\n            }\n        },\n        resize_item:function(i){\n            //console.log(i);\n            var a = this.find_shortest_col();\n            var b={};\n            var c=this.loaded_items[this.init_num+i];\n            if(c){\n                b.src=getIndex(c.src);\n                b.height=c.height;\n                b.text=c.text;\n                waterfall_model.img_list[a].push(b);\n            }\n        }\n    };\n    var waterfall_model = avalon.define(\"waterfall\",function(vm) {// vm\n        vm.img_list = [];\n        vm.rendered = function() {// 每次图片加载渲染后执行\n\n            if(waterfall.resizing){\n                if (waterfall.loaded_num+ waterfall.init_num<waterfall.loaded_items.length){\n                    waterfall.loaded_num++;\n                    waterfall.resize_item(waterfall.loaded_num);\n                    //waterfall.start++;\n                }\n            }else{\n\n                if (waterfall.loaded_num + waterfall.init_num <waterfall.load_items.length){\n                    waterfall.loaded_num++;\n                    waterfall.add_item(waterfall.loaded_num);\n                    waterfall.start++;\n                }\n            }\n        };\n    });\n    avalon.config({\n        debug:false\n    });\n    avalon.scan();\n    function debouncer( func , timeout ) {\n        var timeoutID , timeout = timeout || 200;\n        return function () {\n            var scope = this , args = arguments;\n            clearTimeout( timeoutID );\n            timeoutID = setTimeout( function () {\n                func.apply( scope , Array.prototype.slice.call( args ) );\n            } , timeout );\n        }\n    }\n    avalon.post(\"http://localhost/css/test.php?start=0\", function(data) {\n        // 加载第一次\n        waterfall.init(data);\n    }, \"json\");\n    window.onscroll =debouncer( function ( e ) {\n        var scrollTop = avalon(window).scrollTop(), windowHeight = avalon(\n            window).height(), documentHeight = avalon(document).height();\n        if (windowHeight + scrollTop==documentHeight) {\n            avalon.post(\"http://localhost/css/test.php?start=\"+(waterfall.start), function(data) {\n                // 加载第一次\n                waterfall.resizing=false;\n                waterfall.load_items=data;\n                waterfall.loaded_items=waterfall.loaded_items.concat(data);\n                waterfall.loaded_num =waterfall.init_num=0;\n                waterfall.add_item(0);\n            }, \"json\");\n        }\n    });\n    window.onresize = debouncer( function ( e ) {\n        var windowWidth = avalon(window).width(), k = Math\n            .floor(windowWidth / 200), detect_left = avalon(\n            $('waterFallDetect')).offset().left;\n        if (Math.abs(detect_left) >= 199) {\n            waterfall.col_num = Math.floor(avalon(window).width()\n                / waterfall.col_width);\n            waterfall_model.img_list = [];\n            for ( var j = 0; j < waterfall.col_num; j++) {\n                waterfall_model.img_list.push([]);\n            }\n            waterfall.resizing=true;\n            waterfall.loaded_num =waterfall.init_num=0;\n            //waterfall.start=0;\n            waterfall.resize_item(0);\n        }\n    },30) ;\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/modules/photoes/photoes.js\n ** module id = 68\n ** module chunks = 12\n **/"],"sourceRoot":""}